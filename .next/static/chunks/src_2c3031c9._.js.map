{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/coinmarketcap.ts"],"sourcesContent":["// API key from the user\nconst API_KEY = \"92fe215e-edac-4a39-9b6c-f4bb30805ec4\";\nconst BASE_URL = \"https://pro-api.coinmarketcap.com/v1\";\n\nexport interface Cryptocurrency {\n  id: number;\n  name: string;\n  symbol: string;\n  quote: {\n    USD: {\n      price: number;\n      volume_24h: number;\n      percent_change_1h: number;\n      percent_change_24h: number;\n      percent_change_7d: number;\n      market_cap: number;\n    }\n  };\n}\n\nexport const fetchCryptocurrencyData = async (symbol: string): Promise<Cryptocurrency | null> => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/cryptocurrency/quotes/latest?symbol=${symbol}&convert=USD`,\n      {\n        headers: {\n          \"X-CMC_PRO_API_KEY\": API_KEY,\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (data.status.error_code !== 0) {\n      throw new Error(data.status.error_message);\n    }\n\n    // Return the first cryptocurrency in the response\n    const cryptoKey = Object.keys(data.data)[0];\n    return data.data[cryptoKey];\n  } catch (error) {\n    console.error(\"Error fetching cryptocurrency data:\", error);\n    return null;\n  }\n};\n\nexport const fetchMultipleCryptocurrencies = async (symbols: string[]): Promise<Cryptocurrency[] | null> => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/cryptocurrency/quotes/latest?symbol=${symbols.join(\",\")}&convert=USD`,\n      {\n        headers: {\n          \"X-CMC_PRO_API_KEY\": API_KEY,\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (data.status.error_code !== 0) {\n      throw new Error(data.status.error_message);\n    }\n\n    // Convert the data object to an array of cryptocurrencies\n    const cryptocurrencies: Cryptocurrency[] = [];\n    for (const key in data.data) {\n      cryptocurrencies.push(data.data[key]);\n    }\n\n    return cryptocurrencies;\n  } catch (error) {\n    console.error(\"Error fetching multiple cryptocurrencies:\", error);\n    return null;\n  }\n};\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AACxB,MAAM,UAAU;AAChB,MAAM,WAAW;AAkBV,MAAM,0BAA0B,OAAO;IAC5C,IAAI;QACF,MAAM,WAAW,MAAM,MACrB,GAAG,SAAS,qCAAqC,EAAE,OAAO,YAAY,CAAC,EACvE;YACE,SAAS;gBACP,qBAAqB;YACvB;QACF;QAGF,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,KAAK,MAAM,CAAC,UAAU,KAAK,GAAG;YAChC,MAAM,IAAI,MAAM,KAAK,MAAM,CAAC,aAAa;QAC3C;QAEA,kDAAkD;QAClD,MAAM,YAAY,OAAO,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;QAC3C,OAAO,KAAK,IAAI,CAAC,UAAU;IAC7B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uCAAuC;QACrD,OAAO;IACT;AACF;AAEO,MAAM,gCAAgC,OAAO;IAClD,IAAI;QACF,MAAM,WAAW,MAAM,MACrB,GAAG,SAAS,qCAAqC,EAAE,QAAQ,IAAI,CAAC,KAAK,YAAY,CAAC,EAClF;YACE,SAAS;gBACP,qBAAqB;YACvB;QACF;QAGF,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,KAAK,MAAM,CAAC,UAAU,KAAK,GAAG;YAChC,MAAM,IAAI,MAAM,KAAK,MAAM,CAAC,aAAa;QAC3C;QAEA,0DAA0D;QAC1D,MAAM,mBAAqC,EAAE;QAC7C,IAAK,MAAM,OAAO,KAAK,IAAI,CAAE;YAC3B,iBAAiB,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI;QACtC;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6CAA6C;QAC3D,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api-test/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { fetchCryptocurrencyData } from \"@/lib/coinmarketcap\";\n\nexport default function ApiTest() {\n  const [data, setData] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const result = await fetchCryptocurrencyData(\"BTC\");\n        setData(result);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : \"An unknown error occurred\");\n        console.error(\"Error fetching data:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) return <div className=\"p-4\">Loading...</div>;\n  if (error) return <div className=\"p-4 text-red-500\">Error: {error}</div>;\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">API Test Results</h1>\n      {data ? (\n        <div>\n          <h2 className=\"text-xl font-semibold\">{data.name} ({data.symbol})</h2>\n          <p>Price: ${data.quote.USD.price.toFixed(2)}</p>\n          <p>24h Change: {data.quote.USD.percent_change_24h.toFixed(2)}%</p>\n          <p>Market Cap: ${data.quote.USD.market_cap.toLocaleString()}</p>\n          <p>Volume 24h: ${data.quote.USD.volume_24h.toLocaleString()}</p>\n        </div>\n      ) : (\n        <p>No data available</p>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IACtC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,MAAM;+CAAY;oBAChB,IAAI;wBACF,WAAW;wBACX,MAAM,SAAS,MAAM,CAAA,GAAA,8HAAA,CAAA,0BAAuB,AAAD,EAAE;wBAC7C,QAAQ;oBACV,EAAE,OAAO,KAAK;wBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;wBAC9C,QAAQ,KAAK,CAAC,wBAAwB;oBACxC,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;4BAAG,EAAE;IAEL,IAAI,SAAS,qBAAO,6LAAC;QAAI,WAAU;kBAAM;;;;;;IACzC,IAAI,OAAO,qBAAO,6LAAC;QAAI,WAAU;;YAAmB;YAAQ;;;;;;;IAE5D,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;YACvC,qBACC,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;;4BAAyB,KAAK,IAAI;4BAAC;4BAAG,KAAK,MAAM;4BAAC;;;;;;;kCAChE,6LAAC;;4BAAE;4BAAS,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;;;;;;;kCACzC,6LAAC;;4BAAE;4BAAa,KAAK,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC;4BAAG;;;;;;;kCAC7D,6LAAC;;4BAAE;4BAAc,KAAK,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,cAAc;;;;;;;kCACzD,6LAAC;;4BAAE;4BAAc,KAAK,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,cAAc;;;;;;;;;;;;qCAG3D,6LAAC;0BAAE;;;;;;;;;;;;AAIX;GAzCwB;KAAA","debugId":null}}]
}